html  ---->in parctice---->lesson 2 creating hperlinks --->lesson 3 commonCSSpropertyvalues----->lesson4 Borders----》lesson 5 containing floats
oldboy---->面试题4.                  //7.7
狗眼40 400w, 时空40 300w
ATOM里自动补全html格式
lesson 8 navigational list example
lesson 10 building forms 
1.reduce HTTP requests 书
算法 看完快排，到5.
JS 数组迭代       7.24日。
HTML 看完complex selectors. 去看responsive web design
算法 看完线性时间排序 去看顺序统计，哈希表
javascript 日期。
Jquery DOM manipulations
算法，哈希表2
JS没看。还是日期
var dictionary = function(){
    items = {}

    //has方法
    this.has = function(key){
       // return items.hasOwnProperty(key)
       return key in items
    }
    
    //set
    this.set = function(key,value){
         items[key] = value
    }

    //delete
    this.delete =function(key){
        if(items.has(key))
        {
            delete(items[key])       //delete (key)????
            return true
        }
        else 
        return false
    }
    
    //get
    this.get = function(key){
        if(items.has(key))
        {
            return items[key]
        }
        else
        return undefined
    }
}
//hashtable
var hashTable = function(){
    var items = []
    var llhc = function (key){      //将key转为对应ASCII码并求和，放在对应地址?数组下标
      var hash = 0
      for (var i=0;i < key.length ; i++)
      {
          hash += key[i].charCodeAt()     //转成ASCII
      }  
      return hash % 37                //压缩空间，否则可能太大浪费空间
    }
   var djb2 = function (key){

   }

    //下面三个为用llhc的方法
    this.put =function(key,value){
        var position = llhc(key)
        items[position] = value
    }
    this.get = function(key){
        return items[llhc(key)]         // 居然不用判断!?   
    }




    this.remove = function(key){
        items.[llhc(key)] = undefined
    }
}

var hashTable_L = function(){
   items = []

    var llhc = function (key){      //将key转为对应ASCII码并求和，放在对应地址?数组下标
      var hash = 0
      for (var i=0;i < key.length ; i++)
      {
          hash += key[i].charCodeAt()     //转成ASCII
      }  
      return hash % 37                //压缩空间，否则可能太大浪费空间
    }
    this.put = function(key, value){
        var position = llhc(key)
        if (table)

    }
}